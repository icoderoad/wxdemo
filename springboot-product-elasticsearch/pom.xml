<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	 <parent>
        <groupId>com.icoderoad.example</groupId>
        <artifactId>demo</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
	<artifactId>springboot-product-elasticsearch</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>ProductElasticsearch</name>
	<description>Demo ProductElasticsearch project for Spring Boot</description>
	<properties>
		<java.version>1.8</java.version>
	</properties>
	<dependencies>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		
		<!-- MyBatis-Plus -->
	    <dependency>
	        <groupId>com.baomidou</groupId>
	        <artifactId>mybatis-plus-boot-starter</artifactId>
	        <version>${mybatis-plus-boot-starter.version}</version>
	    </dependency>

	    <!-- Thymeleaf -->
	    <dependency>
	        <groupId>org.springframework.boot</groupId>
	        <artifactId>spring-boot-starter-thymeleaf</artifactId>
	    </dependency>

	    <!-- Jackson for JSON -->
	    <dependency>
	        <groupId>com.fasterxml.jackson.core</groupId>
	        <artifactId>jackson-databind</artifactId>
	    </dependency>

	    <!-- Logback -->
	    <dependency>
	        <groupId>ch.qos.logback</groupId>
	        <artifactId>logback-classic</artifactId>
	    </dependency>
	    
	      <!-- MySQL Driver -->
	    <dependency>
	        <groupId>mysql</groupId>
	        <artifactId>mysql-connector-java</artifactId>
	        <version>${mysql-connector-java.version}</version>
	    </dependency>

	    <!-- Spring Data Elasticsearch -->
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			 <plugin>
                  <groupId>com.github.wvengen</groupId>
                  <artifactId>proguard-maven-plugin</artifactId>
                  <version>2.6.0</version>
                  <executions>
                      <!-- 以下配置说明执行mvn的package命令时候，会执行proguard-->
                      <execution>
                          <phase>package</phase>
                          <goals>
                              <goal>proguard</goal>
                          </goals>
                      </execution>
                  </executions>
                  <configuration>
                      <!-- 就是输入Jar的名称，我们要知道，代码混淆其实是将一个原始的jar，生成一个混淆后的jar，那么就会有输入输出。 -->
                      <injar>${project.build.finalName}.jar</injar>
                      <!-- 输出jar名称，输入输出jar同名的时候就是覆盖，也是比较常用的配置。 -->
                      <outjar>${project.build.finalName}.jar</outjar>
                      <!-- 是否混淆 默认是true -->
                      <obfuscate>true</obfuscate>
                      <!-- 配置一个文件，通常叫做proguard.cfg,该文件主要是配置options选项，也就是说使用proguard.cfg那么options下的所有内容都可以移到proguard.cfg中 -->
                      <proguardInclude>${project.basedir}/proguard.cfg</proguardInclude>
                      <!-- 额外的jar包，通常是项目编译所需要的jar -->
                      <libs>
                          <lib>${java.home}/lib/rt.jar</lib>
                          <lib>${java.home}/lib/jce.jar</lib>
                          <lib>${java.home}/lib/jsse.jar</lib>
                      </libs>
                      <!-- 对输入jar进行过滤比如，如下配置就是对META-INFO文件不处理。 -->
                      <inLibsFilter>!META-INF/**,!META-INF/versions/9/**.class</inLibsFilter>
                      <!-- 这是输出路径配置，但是要注意这个路径必须要包括injar标签填写的jar -->
                      <outputDirectory>${project.basedir}/target</outputDirectory>
                      <!--这里特别重要，此处主要是配置混淆的一些细节选项，比如哪些类不需要混淆，哪些需要混淆-->
                      <options>
                          <!-- 可以在此处写option标签配置，不过我上面使用了proguardInclude，故而我更喜欢在proguard.cfg中配置 -->
                      </options>
                  </configuration>
              </plugin>
		</plugins>
	</build>

</project>
